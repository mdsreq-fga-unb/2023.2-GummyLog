"use strict";(self.webpackChunkgummy_store_docs=self.webpackChunkgummy_store_docs||[]).push([[243],{3905:(e,r,o)=>{o.d(r,{Zo:()=>l,kt:()=>f});var t=o(7294);function a(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function n(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?n(Object(o),!0).forEach((function(r){a(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function i(e,r){if(null==e)return{};var o,t,a=function(e,r){if(null==e)return{};var o,t,a={},n=Object.keys(e);for(t=0;t<n.length;t++)o=n[t],r.indexOf(o)>=0||(a[o]=e[o]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)o=n[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var u=t.createContext({}),d=function(e){var r=t.useContext(u),o=r;return e&&(o="function"==typeof e?e(r):s(s({},r),e)),o},l=function(e){var r=d(e.components);return t.createElement(u.Provider,{value:r},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var o=e.components,a=e.mdxType,n=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),c=d(o),m=a,f=c["".concat(u,".").concat(m)]||c[m]||p[m]||n;return o?t.createElement(f,s(s({ref:r},l),{},{components:o})):t.createElement(f,s({ref:r},l))}));function f(e,r){var o=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=o.length,s=new Array(n);s[0]=m;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var d=2;d<n;d++)s[d]=o[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},4588:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var t=o(7462),a=(o(7294),o(3905));const n={title:"Arquitetura do Produto",sidebar_position:3},s="Arquitetura do produto",i={unversionedId:"Sobre o produto/arquitetura",id:"Sobre o produto/arquitetura",title:"Arquitetura do Produto",description:"A arquitetura Cliente-server \xe9 composta por dois componentes, o fornecedor, o qual se encarrega de prover os servi\xe7os e o consumidor, o qual usa os servi\xe7os.",source:"@site/docs/Sobre o produto/arquitetura.md",sourceDirName:"Sobre o produto",slug:"/Sobre o produto/arquitetura",permalink:"/2023.2-GummyLog/Sobre o produto/arquitetura",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Sobre o produto/arquitetura.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Arquitetura do Produto",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Processos de Desenvolvimento de Software",permalink:"/2023.2-GummyLog/Sobre o produto/processoDeDev"},next:{title:"Integra\xe7\xe3o cont\xednua e Branch Strategy",permalink:"/2023.2-GummyLog/Sobre o produto/integracaoCont"}},u={},d=[],l={toc:d},c="wrapper";function p(e){let{components:r,...o}=e;return(0,a.kt)(c,(0,t.Z)({},l,o,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"arquitetura-do-produto"},"Arquitetura do produto"),(0,a.kt)("p",null,"A arquitetura Cliente-server \xe9 composta por dois componentes, o fornecedor, o qual se encarrega de prover os servi\xe7os e o consumidor, o qual usa os servi\xe7os."),(0,a.kt)("p",null,"Nesta arquitetura podem existir v\xe1rios clientes conectados a um \xfanico servidor para recuperar os recursos necess\xe1rios para funcionar."),(0,a.kt)("p",null,"O cliente neste caso \xe9 apenas uma camada para mostrar os dados, \xe9 o servidor que faz todas as tarefas pesadas, por\xe9m ambas as partes s\xe3o igualmente importantes, o cliente \xe9 completamente inutil se o servidor n\xe3o estiver dispon\xedvel e o servidor sozinho n\xe3o poderia ser usado. "),(0,a.kt)("p",null,"A arquitetura Client-server no caso do GummyLog funciona da seguinte maneira o usu\xe1rio, neste caso um membro do GummyStore, realiza um pedido atrav\xe9s de uma interface no ReactJS, depois desta interface envia solicita\xe7\xf5es ao sistema de back-end que usa ExpressJS, este se encarregar\xe1 de conectar a parte de front-end com o servidor SQL, posteriormente se envia as querendo ao servidor que responde com dados, logo a parte de back-end envia estes dados \xe0 parte front-end para que o usu\xe1rio possa visualiz\xe1-los."),(0,a.kt)("mermaid",{value:'C4Context\ntitle Contexto da Arquitetura do MVP1\n\nEnterprise_Boundary(g0, "GummyStore") {\n    Person(Partner, "S\xf3cio", "Um dos donos da GummyStore")\n\n    System_Boundary(g1, "GummyLog") {\n        System(SystemB, "ReactJS", "Interface de usu\xe1rio")\n        System(SystemA, "ExpressJS", "Servidor back-end que recebe e responde requisi\xe7\xf5es e <br/> aplica regras de neg\xf3cio")\n    }\n    SystemDb_Ext(DB, "PostgreSQL", "Banco de dados que armazena informa\xe7\xf5es de SKUs")\n\n    Rel(Partner, SystemB, "Realiza solicita\xe7\xf5es de adi\xe7\xe3o, remo\xe7\xe3o, <br/> reabastecimento e apagar SKUs")\n    UpdateRelStyle(Partner, SystemB, $lineColor="red", $textColor="red", $offsetX="-235", $offsetY="-50")\n    \n    Rel(SystemB, SystemA, "Envia a solicita\xe7\xe3o para o <br/> back-end aplicar as regras de neg\xf3cio")\n    UpdateRelStyle(SystemB, SystemA, $lineColor="red", $textColor="red", $offsetY="40", $offsetX="-80",)\n    \n    Rel(SystemA, DB, "Envia as queries para alterar <br/> os dados no banco")\n    UpdateRelStyle(SystemA, DB, $lineColor="red", $textColor="red", $offsetX="15")\n    \n    Rel(DB, SystemA, "Envia dados para o back-end <br/> como resposta \xe0s queries")\n    UpdateRelStyle(DB, SystemA, $lineColor="blue", $textColor="blue", $offsetX="-170")\n\n    Rel(SystemA, SystemB, "Envia a resposta <br/> das solicita\xe7\xf5es <br/> do front-end")\n    UpdateRelStyle(SystemA, SystemB, $lineColor="blue", $textColor="blue", $offsetY="-35", $offsetX="-45")\n\n    Rel(SystemB, Partner, "Envia a resposta das <br/> solicita\xe7\xf5es do usu\xe1rio")\n    UpdateRelStyle(SystemB, Partner, $lineColor="blue", $textColor="blue", $offsetY="-50", $offsetX="10")\n}\n'}))}p.isMDXComponent=!0}}]);